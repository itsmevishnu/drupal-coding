<?php
/**
 * @file
 * Contains all the modification of drupal core using hooks.
 */
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_system_sites_information_settings_alter.
 * @param  [type]             &$form      [description]
 * @param  FormStateInterface $form_state [description]
 * @param  [type]             $form_id    [description]
 * @return [type]                         [description]
 */
function api_key_form_system_site_information_settings_alter(&$form, 
	FormStateInterface $form_state, $form_id) {
	if($form_id != 'system_site_information_settings') {
		return;
	}

	$site_api = \Drupal::config('api_key.settings')->get('siteapikey');

	$form['api_settings'] = array(
		'#type' => 'details',
		'#title' =>t('Site API settings'),
		'#open' => true
	);

	$form['api_settings']['siteapikey'] = [
		'#type' => 'textfield',
		'#title' => t('API Key'),
		'#default_value' => $site_api,
		'#description' => t('Enter the API key for making the site 
			protected on API calls'),
		'#maxlength' => 32,
		'#required' => true,
		'#placeholder'=> t('No API key yet')
	];
	
	$value = !empty($site_api)? t('Update Configuration'): t('Save Configuration');
	$form['actions']['submit']['#value'] = $value;
	$form['#submit'][] = 'api_key_form_submit';
	return $form;
}

/**
 * Custom submit handler.
 * @param  array              $form       [description]
 * @param  FormStateInterface $form_state [description]
 * @return [type]                         [description]
 */
function api_key_form_submit(array $form, FormStateInterface $form_state) {
	$site_api = \Drupal::config('api_key.settings')->get('siteapikey');
	
	//Reads the new value form the form instance.
	$new_value = $form_state->getValue('siteapikey');
	
	//Changes the success message based on the condtions.
	if(!empty($site_api) && ($site_api != $new_value)) {
		$message = t('Site API key is changed from @old_value to 
			@new_value', [
				'@old_value'=> $site_api, 
				'@new_value'=> $new_value
			]);
	} 
	
	//First time api key creation.
	if(empty($site_api)){
			//Sets success message.
		$message = t('@new_value is set as site API key.',
			['@new_value'=>$new_value]);
	}

	// Saves the value of siteapikey to the database.
	$config = \Drupal::service('config.factory')->getEditable('api_key.settings');
	$config->set('siteapikey', $form_state->getValue('siteapikey'));
	$config->save();
	
	//Prints the message.
	drupal_set_message($message,$type='status', $repeat=true);
}